# Cheat Sheet
#  :new<CR>  new session
#  $  name session
# link-window -s main:mpromenc -t atlassian:5
# swap-window -s 2 -t 5
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

#--General---------------------------------------------------------------------
# mouse mode on by default
setw -g mouse on
# Mouse mode copy to OS paste buffer!
set -g set-clipboard on

set -g status-interval 5
set -g default-terminal "screen-256color"
setw -g xterm-keys on

# faster command sequences
set -s escape-time 0

# increase repeat timeout
set -sg repeat-time 600                   

set -g display-time 2000
setw -g aggressive-resize on
set -g history-limit 50000

# remap prefix from 'C-b' to 'C-`'
#set prefix `
# unbind C-b
set-option -g prefix "`"
bind-key "`" send-prefix

# Assign C-s to split pane horizontally and start a new SSH session
#bind-key C-s run-shell "tmux split-window -h \"SSHH_INDEX=$(tmux display -p \",#{pane_index}\") bash -l\"" \; send-keys 'sshh ${SSHH_INDEX}' ENTER

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %
# Session display
bind s choose-tree -s
# send input to all panes (toggle)
bind / set synchronize-panes \; display "Sync #{?synchronize-panes,ON,OFF}"
# IC = insert key - Dump the entire history to a file in the home directory
bind-key IC capture-pane -S -32768 \; save-buffer ~/tmux.history \; delete-buffer
# Toggle mouse mode
bind m set -g mouse \; display "Mouse mode #{?mouse,ON,OFF}"
# Edit config
bind e new-window -n '~/.tmux.conf' "sh -c '\${EDITOR:-vim} ~/.tmux.conf'"
# reload config file
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
# SSH to host in a new tab
bind-key h command-prompt -p "SSH to host:" "if-shell '[ -n \"%%\" ]' 'new-window -n \"%1\" \"/usr/bin/ssh %1\"'"
# The new session bind below assumes a session already exists named "main" with a window named "login" and a window named "puppet"
# Create the "default" session 
# alias tmuxnew="tmux new-session -d -s main && tmux rename-window login && tmux new-window -d -n puppet && tmux a" 
bind-key o command-prompt -p "New Session:" "if-shell '[ -n \"%%\" ]' 'new -s "%1"\; move-window -s "%1":0 -t "%1":2 \; link-window -s main:login -t "%1":0 \; link-window -s main:puppet -t "%1":1 \; kill-window -t "%1":2'"
bind-key y move-window -t backlog \; movew -r \; display-message "Window moved to backlog session"
bind-key u move-window -t main \; movew -r\; display-message "Window moved to main session"
# renumber windows - this fills the gaps if you close window 2 of 5 
bind-key "#" movew -r
# close window and automatically renumber
bind-key & kill-window \; movew -r
# reset prefix key to the default - helps when pasting code with "`"
bind-key -n F11 set -g prefix C-b \; display-message "C-b binding"
# back to our preffered prefix bind
bind-key -n F12 set -g prefix ` \; display-message "Back to ` bind"
# create session
bind C-c new-session
# Start numbering at 0
set -g base-index 0
setw -g pane-base-index 0   

#--Navigation--------------------------------------------------------------------- 

# switch panes using Alt-arrow without prefix
# prefix + arrow does the same thing
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# vi keys to resize windows without mouse mode - larger numbers resizes in larger increments
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2
# bind-key J resize-pane -D 5
# bind-key K resize-pane -U 5
# bind-key H resize-pane -L 5
# bind-key L resize-pane -R 5

# shift+left and shift+right to move between windows
bind -n S-Left  previous-window
bind -n S-Right next-window

setw -g mode-keys vi

#--Design--------------------------------------------------------------------------

# Info on left
set -g status-left ''

# loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# The modes 
setw -g clock-mode-colour colour135
# The statusbar 
#set -g status-right '#(gitmux -q -fmt tmux #{pane_current_path}) #[fg=colour233,bg=colour241,bold] %m/%d #[fg=colour233,bg=colour245,bold] %H:%M:%S '
#set -g status-right '#(gitmux -q -fmt tmux #{pane_current_path}) #[fg=colour4,bg=colour241,bold] %m/%d #[fg=colour4,bg=colour241,bold] %H:%M:%S '
set -g status-right '#(~/gitmux #{pane_current_path}) #[fg=colour4,bg=colour241,bold]#(TZ="America/New_York" date +" %m/%d %%H:%%M ")#[fg=colour241,bg=colour4,bold]#(date +" %%H:%%M ")'

set -g status-right-length 50
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '
# Bottom bar background
setw -g status-bg colour235
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
# copy paste from rando github page
# default statusbar colors
set-option -g status-style fg=yellow,bg=black #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default
#set-window-option -g window-status-current-style bright
# pane border
set-option -g pane-border-style fg=colour249
set-option -g pane-active-border-style fg=colour5 #base01
# message text
set-option -g message-style fg=brightred,bg=black #orange and base01

# pane number display
set-option -g display-panes-active-colour brightred
set-option -g display-panes-colour colour135

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
